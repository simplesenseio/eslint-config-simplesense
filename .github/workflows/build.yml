---
name: Build

on: push

jobs:
  npm:
    name: NPM Scripts
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
        script: [test, lint]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: npm ci

      - run: npm run ${{ matrix.script }} --if-present

  cloudformation:
    name: CloudFormation Template Validation
    runs-on: ubuntu-latest
    env:
      AWS_EC2_METADATA_DISABLED: true
      TEMPLATE_FILEPATH: cloudformation.yaml
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Validate Template
        run: |
          if [ -f "${TEMPLATE_FILEPATH}" ]; then
            aws cloudformation validate-template --template-body "file://${TEMPLATE_FILEPATH}"
          fi

  shellcheck:
    name: ShellCheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install shellcheck
        run: sudo apt-get install shellcheck

      - name: Run shellcheck
        run: |
          if test "$(find . -name "*.sh" | grep -v node_modules | wc -c)" -ne 0
          then
            find . -name "*.sh" | grep -v node_modules | xargs shellcheck
          fi
        shell: bash
