import{_ as i,c as e,a1 as a,o as t}from"./chunks/framework.DHJwed8E.js";const k=JSON.parse('{"title":"import/no-cycle","description":"","frontmatter":{},"headers":[],"relativePath":"rules/import/no-cycle.md","filePath":"rules/import/no-cycle.md"}'),n={name:"rules/import/no-cycle.md"};function l(p,s,h,o,r,d){return t(),e("div",null,s[0]||(s[0]=[a(`<h1 id="import-no-cycle" tabindex="-1">import/no-cycle <a class="header-anchor" href="#import-no-cycle" aria-label="Permalink to &quot;import/no-cycle&quot;">​</a></h1><p>Ensures that there is no resolvable path back to this module via its dependencies.</p><p>This includes cycles of depth 1 (imported module imports me) to <code>&quot;∞&quot;</code> (or <code>Infinity</code>), if the <a href="#maxdepth"><code>maxDepth</code></a> option is not set.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// dep-b.js</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./dep-a.js&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* ... */</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// dep-a.js</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { b } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./dep-b.js&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // reported: Dependency cycle detected.</span></span></code></pre></div><p>This rule does <em>not</em> detect imports that resolve directly to the linted module; for that, see <a href="./no-self-import"><code>no-self-import</code></a>.</p><p>This rule ignores type-only imports in Flow and TypeScript syntax (<code>import type</code> and <code>import typeof</code>), which have no runtime effect.</p><h2 id="rule-details" tabindex="-1">Rule Details <a class="header-anchor" href="#rule-details" aria-label="Permalink to &quot;Rule Details&quot;">​</a></h2><h3 id="options" tabindex="-1">Options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;Options&quot;">​</a></h3><p>By default, this rule only detects cycles for ES6 imports, but see the <a href="./no-unresolved#options"><code>no-unresolved</code> options</a> as this rule also supports the same <code>commonjs</code> and <code>amd</code> flags. However, these flags only impact which import types are <em>linted</em>; the import/export infrastructure only registers <code>import</code> statements in dependencies, so cycles created by <code>require</code> within imported modules may not be detected.</p><h4 id="maxdepth" tabindex="-1"><code>maxDepth</code> <a class="header-anchor" href="#maxdepth" aria-label="Permalink to &quot;\`maxDepth\`&quot;">​</a></h4><p>There is a <code>maxDepth</code> option available to prevent full expansion of very deep dependency trees:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*eslint import/no-cycle: [2, { maxDepth: 1 }]*/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// dep-c.js</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./dep-a.js&#39;</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// dep-b.js</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./dep-c.js&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* ... */</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// dep-a.js</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { b } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./dep-b.js&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // not reported as the cycle is at depth 2</span></span></code></pre></div><p>This is not necessarily recommended, but available as a cost/benefit tradeoff mechanism for reducing total project lint time, if needed.</p><h4 id="ignoreexternal" tabindex="-1"><code>ignoreExternal</code> <a class="header-anchor" href="#ignoreexternal" aria-label="Permalink to &quot;\`ignoreExternal\`&quot;">​</a></h4><p>An <code>ignoreExternal</code> option is available to prevent the cycle detection to expand to external modules:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*eslint import/no-cycle: [2, { ignoreExternal: true }]*/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// dep-a.js</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;module-b/dep-b.js&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* ... */</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// node_modules/module-b/dep-b.js</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { a } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./dep-a.js&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // not reported as this module is external</span></span></code></pre></div><p>Its value is <code>false</code> by default, but can be set to <code>true</code> for reducing total project lint time, if needed.</p><h4 id="allowunsafedynamiccyclicdependency" tabindex="-1"><code>allowUnsafeDynamicCyclicDependency</code> <a class="header-anchor" href="#allowunsafedynamiccyclicdependency" aria-label="Permalink to &quot;\`allowUnsafeDynamicCyclicDependency\`&quot;">​</a></h4><p>This option disable reporting of errors if a cycle is detected with at least one dynamic import.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// bar.js</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { foo } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./foo&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> bar</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> foo;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// foo.js</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> foo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Foo&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getBar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./bar&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); }</span></span></code></pre></div><blockquote><p>Cyclic dependency are <strong>always</strong> a dangerous anti-pattern as discussed extensively in <a href="https://github.com/import-js/eslint-plugin-import/issues/2265" target="_blank" rel="noreferrer">#2265</a>. Please be extra careful about using this option.</p></blockquote><h4 id="disablescc" tabindex="-1"><code>disableScc</code> <a class="header-anchor" href="#disablescc" aria-label="Permalink to &quot;\`disableScc\`&quot;">​</a></h4><p>This option disables a pre-processing step that calculates <a href="https://en.wikipedia.org/wiki/Strongly_connected_component" target="_blank" rel="noreferrer">Strongly Connected Components</a>, which are used for avoiding unnecessary work checking files in different SCCs for cycles.</p><p>However, under some configurations, this pre-processing may be more expensive than the time it saves.</p><p>When this option is <code>true</code>, we don&#39;t calculate any SCC graph, and check all files for cycles (leading to higher time-complexity). Default is <code>false</code>.</p><h2 id="when-not-to-use-it" tabindex="-1">When Not To Use It <a class="header-anchor" href="#when-not-to-use-it" aria-label="Permalink to &quot;When Not To Use It&quot;">​</a></h2><p>This rule is comparatively computationally expensive. If you are pressed for lint time, or don&#39;t think you have an issue with dependency cycles, you may not want this rule enabled.</p><h2 id="further-reading" tabindex="-1">Further Reading <a class="header-anchor" href="#further-reading" aria-label="Permalink to &quot;Further Reading&quot;">​</a></h2><ul><li><a href="https://github.com/import-js/eslint-plugin-import/issues/941" target="_blank" rel="noreferrer">Original inspiring issue</a></li><li>Rule to detect that module imports itself: <a href="./no-self-import"><code>no-self-import</code></a></li><li><a href="./../../README#importexternal-module-folders"><code>import/external-module-folders</code></a> setting</li></ul>`,33)]))}const g=i(n,[["render",l]]);export{k as __pageData,g as default};
