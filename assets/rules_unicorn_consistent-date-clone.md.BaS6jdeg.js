import{_ as s,c as t,ae as a,o as n}from"./chunks/framework.D_WxFy46.js";const k=JSON.parse('{"title":"Prefer passing Date directly to the constructor when cloning","description":"","frontmatter":{},"headers":[],"relativePath":"rules/unicorn/consistent-date-clone.md","filePath":"rules/unicorn/consistent-date-clone.md"}'),i={name:"rules/unicorn/consistent-date-clone.md"};function o(r,e,l,c,p,d){return n(),t("div",null,e[0]||(e[0]=[a(`<h1 id="prefer-passing-date-directly-to-the-constructor-when-cloning" tabindex="-1">Prefer passing <code>Date</code> directly to the constructor when cloning <a class="header-anchor" href="#prefer-passing-date-directly-to-the-constructor-when-cloning" aria-label="Permalink to &quot;Prefer passing \`Date\` directly to the constructor when cloning&quot;">​</a></h1><p>💼 This rule is enabled in the ✅ <code>recommended</code> <a href="https://github.com/sindresorhus/eslint-plugin-unicorn#preset-configs-eslintconfigjs" target="_blank" rel="noreferrer">config</a>.</p><p>🔧 This rule is automatically fixable by the <a href="https://eslint.org/docs/latest/user-guide/command-line-interface#--fix" target="_blank" rel="noreferrer"><code>--fix</code> CLI option</a>.</p><p>The <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/Date" target="_blank" rel="noreferrer"><code>Date</code> constructor</a> can clone a <code>⁠Date</code> object directly when passed as an argument, making timestamp conversion unnecessary.</p><blockquote><p>Note: Before ES2015, <code>new Date(date)</code> converted <code>date</code> to a string first, so it&#39;s not safe to clone.</p></blockquote><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ❌</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(date.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ✅</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(date);</span></span></code></pre></div>`,7)]))}const g=s(i,[["render",o]]);export{k as __pageData,g as default};
