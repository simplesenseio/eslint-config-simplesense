import{_ as t,D as l,c as r,I as h,w as n,a3 as e,o as k,l as s,a as i}from"./chunks/framework.ClQ4Qie4.js";const D=JSON.parse('{"title":"regexp/prefer-character-class","description":"enforce using character class","frontmatter":{"pageClass":"rule-details","sidebarDepth":0,"title":"regexp/prefer-character-class","description":"enforce using character class","since":"v0.4.0"},"headers":[],"relativePath":"rules/regexp/prefer-character-class.md","filePath":"rules/regexp/prefer-character-class.md"}'),p={name:"rules/regexp/prefer-character-class.md"},o=e('<h1 id="regexp-prefer-character-class" tabindex="-1">regexp/prefer-character-class <a class="header-anchor" href="#regexp-prefer-character-class" aria-label="Permalink to &quot;regexp/prefer-character-class&quot;">‚Äã</a></h1><p>üíº This rule is enabled in the following configs: üü¢ <code>flat/recommended</code>, üîµ <code>recommended</code>.</p><p>üîß This rule is automatically fixable by the <a href="https://eslint.org/docs/latest/user-guide/command-line-interface#--fix" target="_blank" rel="noreferrer"><code>--fix</code> CLI option</a>.</p><blockquote><p>enforce using character class</p></blockquote><h2 id="rule-details" tabindex="-1">üìñ Rule Details <a class="header-anchor" href="#rule-details" aria-label="Permalink to &quot;:book: Rule Details&quot;">‚Äã</a></h2><p>Instead of single-character alternatives (e.g. <code>(?:a|b|c)</code>), character classes (e.g. <code>[abc]</code>) should be preferred.</p><p>The main reason for doing this is performance. Character classes don&#39;t require backtracking and are heavily optimized by the regex engine. On the other hand, alternatives are usually quite tricky to optimize.</p><p>Character classes are also safer than alternatives because they don&#39;t require backtracking. While <code>^(?:\\w|a)+b$</code> will take <em>O(2^n)</em> time to reject a string of <em>n</em> many <code>a</code>s, the regex <code>^[\\wa]+b$</code> will reject a string of <em>n</em> many <code>a</code>s in <em>O(n)</em>.</p><h3 id="limitations" tabindex="-1">Limitations <a class="header-anchor" href="#limitations" aria-label="Permalink to &quot;Limitations&quot;">‚Äã</a></h3><p>This rule might not be able to merge all single-character alternatives.</p>',10),c=s("div",{class:"language-js vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"js"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},'/* eslint regexp/prefer-character-class: "error" */')]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"/* ‚úì GOOD */")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"var"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," foo "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," /"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"[abc]"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"/")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"var"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," foo "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," /"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#DBEDFF"}},"(?:a"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#DBEDFF"}},"b)"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"/")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"/* ‚úó BAD */")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"var"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," foo "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," /"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#DBEDFF"}},"a"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#DBEDFF"}},"b"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#DBEDFF"}},"c"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"/")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"var"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," foo "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," /"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#DBEDFF"}},"(a"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#DBEDFF"}},"b"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#DBEDFF"}},"c)c"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"/")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"var"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," foo "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," /"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"."),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"\\s"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"/")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"var"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," foo "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," /"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#DBEDFF"}},"("),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"\\w"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"\\d"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#DBEDFF"}},")"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"+"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#DBEDFF"}},":"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"/")])])])],-1),d=e(`<h2 id="options" tabindex="-1">üîß Options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;:wrench: Options&quot;">‚Äã</a></h2><div class="language-json5 vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json5</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;regexp/prefer-character-class&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;error&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;minAlternatives&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="minalternatives-integer" tabindex="-1"><code>minAlternatives: integer</code> <a class="header-anchor" href="#minalternatives-integer" aria-label="Permalink to &quot;\`minAlternatives: integer\`&quot;">‚Äã</a></h3><p>This number controls how many character alternatives have to be present for them to be merged. By default, there need to be at least 3 alternatives.</p><p>Note that this option does not affect character alternatives where the characters overlap. These alternatives will always be merged to prevent excessive backtracking.</p><h2 id="version" tabindex="-1">üöÄ Version <a class="header-anchor" href="#version" aria-label="Permalink to &quot;:rocket: Version&quot;">‚Äã</a></h2><p>This rule was introduced in eslint-plugin-regexp v0.4.0</p><h2 id="implementation" tabindex="-1">üîç Implementation <a class="header-anchor" href="#implementation" aria-label="Permalink to &quot;:mag: Implementation&quot;">‚Äã</a></h2><ul><li><a href="https://github.com/ota-meshi/eslint-plugin-regexp/blob/master/lib/rules/prefer-character-class.ts" target="_blank" rel="noreferrer">Rule source</a></li><li><a href="https://github.com/ota-meshi/eslint-plugin-regexp/blob/master/tests/lib/rules/prefer-character-class.ts" target="_blank" rel="noreferrer">Test source</a></li></ul>`,9);function g(F,y,E,u,m,f){const a=l("eslint-code-block");return k(),r("div",null,[o,h(a,{fix:""},{default:n(()=>[c]),_:1}),d])}const _=t(p,[["render",g]]);export{D as __pageData,_ as default};
