import{_ as a,c as o,ae as d,G as l,w as n,j as e,a as i,B as r,o as m}from"./chunks/framework.D_WxFy46.js";const f=JSON.parse('{"title":"@eslint-community/eslint-comments/no-unlimited-disable","description":"","frontmatter":{},"headers":[],"relativePath":"rules/@eslint-community/eslint-comments/no-unlimited-disable.md","filePath":"rules/@eslint-community/eslint-comments/no-unlimited-disable.md"}'),u={name:"rules/@eslint-community/eslint-comments/no-unlimited-disable.md"};function c(p,s,h,k,b,y){const t=r("eslint-playground");return m(),o("div",null,[s[2]||(s[2]=d('<h1 id="eslint-community-eslint-comments-no-unlimited-disable" tabindex="-1">@eslint-community/eslint-comments/no-unlimited-disable <a class="header-anchor" href="#eslint-community-eslint-comments-no-unlimited-disable" aria-label="Permalink to &quot;@eslint-community/eslint-comments/no-unlimited-disable&quot;">​</a></h1><blockquote><p>disallow <code>eslint-disable</code> comments without rule names</p></blockquote><ul><li>🌟 The <code>&quot;extends&quot;: &quot;plugin:@eslint-community/eslint-comments/recommended&quot;</code> property in a configuration file enables this rule.</li></ul><p><code>eslint-disable</code> directive-comments disable all rules by default. This may cause to overlook some ESLint warnings unintentionally. So you should specify the rules to disable accurately.</p><h2 id="rule-details" tabindex="-1">Rule Details <a class="header-anchor" href="#rule-details" aria-label="Permalink to &quot;Rule Details&quot;">​</a></h2><p>Examples of 👎 <strong>incorrect</strong> code for this rule:</p>',6)),l(t,{type:"bad"},{default:n(()=>s[0]||(s[0]=[e("div",{class:"language-js vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"js"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"/*eslint @eslint-community/eslint-comments/no-unlimited-disable: error */")]),i(`
`),e("span",{class:"line"}),i(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"var"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," foo; "),e("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//eslint-disable-line")])])])],-1)])),_:1}),s[3]||(s[3]=e("p",null,[i("Examples of 👍 "),e("strong",null,"correct"),i(" code for this rule:")],-1)),l(t,{type:"good"},{default:n(()=>s[1]||(s[1]=[e("div",{class:"language-js vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"js"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"/*eslint @eslint-community/eslint-comments/no-unlimited-disable: error */")]),i(`
`),e("span",{class:"line"}),i(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"var"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," foo; "),e("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//eslint-disable-line no-unused-vars")])])])],-1)])),_:1})])}const _=a(u,[["render",c]]);export{f as __pageData,_ as default};
