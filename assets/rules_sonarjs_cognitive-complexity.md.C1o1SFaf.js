import{_ as s,c as e,ae as a,o as t}from"./chunks/framework.D_WxFy46.js";const k=JSON.parse('{"title":"cognitive-complexity","description":"","frontmatter":{},"headers":[],"relativePath":"rules/sonarjs/cognitive-complexity.md","filePath":"rules/sonarjs/cognitive-complexity.md"}'),n={name:"rules/sonarjs/cognitive-complexity.md"};function o(l,i,r,p,h,c){return t(),e("div",null,i[0]||(i[0]=[a(`<h1 id="cognitive-complexity" tabindex="-1">cognitive-complexity <a class="header-anchor" href="#cognitive-complexity" aria-label="Permalink to &quot;cognitive-complexity&quot;">​</a></h1><p>Cognitive Complexity is a measure of how hard the control flow of a function is to understand. Functions with high Cognitive Complexity will be difficult to maintain.</p><h2 id="see" tabindex="-1">See <a class="header-anchor" href="#see" aria-label="Permalink to &quot;See&quot;">​</a></h2><ul><li><a href="https://www.sonarsource.com/resources/cognitive-complexity/" target="_blank" rel="noreferrer">Cognitive Complexity</a></li></ul><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h2><p>The maximum authorized complexity can be provided. Default is 15.</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;sonarjs/cognitive-complexity&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;error&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;sonarjs/cognitive-complexity&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;error&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,7)]))}const u=s(n,[["render",o]]);export{k as __pageData,u as default};
