(window.webpackJsonp=window.webpackJsonp||[]).push([[288],{478:function(e,t,r){"use strict";r.r(t);var s=r(9),a=Object(s.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"regexp-prefer-question-quantifier"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#regexp-prefer-question-quantifier"}},[e._v("#")]),e._v(" regexp/prefer-question-quantifier")]),e._v(" "),r("blockquote",[r("p",[e._v("enforce using "),r("code",[e._v("?")]),e._v(" quantifier")])]),e._v(" "),r("ul",[r("li",[e._v("⚙️ This rule is included in "),r("code",[e._v('"plugin:regexp/recommended"')]),e._v(".")]),e._v(" "),r("li",[e._v("🔧 The "),r("code",[e._v("--fix")]),e._v(" option on the "),r("a",{attrs:{href:"https://eslint.org/docs/user-guide/command-line-interface#fixing-problems",target:"_blank",rel:"noopener noreferrer"}},[e._v("command line"),r("OutboundLink")],1),e._v(" can automatically fix some of the problems reported by this rule.")])]),e._v(" "),r("h2",{attrs:{id:"rule-details"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#rule-details"}},[e._v("#")]),e._v(" 📖 Rule Details")]),e._v(" "),r("p",[e._v("This rule is aimed at using "),r("code",[e._v("?")]),e._v(" quantifier instead of "),r("code",[e._v("{0,1}")]),e._v(" in regular expressions.")]),e._v(" "),r("eslint-code-block",{attrs:{fix:""}},[r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token comment"}},[e._v('/* eslint regexp/prefer-question-quantifier: "error" */')]),e._v("\n\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("/* ✓ GOOD */")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" foo "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token regex"}},[r("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")]),r("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[e._v("a?")]),r("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")])]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("/* ✗ BAD */")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" foo "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token regex"}},[r("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")]),r("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[e._v("a{0,1}")]),r("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")])]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])])]),e._v(" "),r("h2",{attrs:{id:"options"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[e._v("#")]),e._v(" 🔧 Options")]),e._v(" "),r("p",[e._v("Nothing.")]),e._v(" "),r("h2",{attrs:{id:"version"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#version"}},[e._v("#")]),e._v(" 🚀 Version")]),e._v(" "),r("p",[e._v("This rule was introduced in eslint-plugin-regexp v0.1.0")]),e._v(" "),r("h2",{attrs:{id:"implementation"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#implementation"}},[e._v("#")]),e._v(" 🔍 Implementation")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/ota-meshi/eslint-plugin-regexp/blob/master/lib/rules/prefer-question-quantifier.ts",target:"_blank",rel:"noopener noreferrer"}},[e._v("Rule source"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/ota-meshi/eslint-plugin-regexp/blob/master/tests/lib/rules/prefer-question-quantifier.ts",target:"_blank",rel:"noopener noreferrer"}},[e._v("Test source"),r("OutboundLink")],1)])])],1)}),[],!1,null,null,null);t.default=a.exports}}]);