(window.webpackJsonp=window.webpackJsonp||[]).push([[360],{553:function(t,a,e){"use strict";e.r(a);var s=e(9),r=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"non-existent-operator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#non-existent-operator"}},[t._v("#")]),t._v(" non-existent-operator")]),t._v(" "),a("p",[t._v("ðŸ”§ "),a("em",[t._v("fixable")])]),t._v(" "),a("p",[t._v("The use of operators pairs ("),a("code",[t._v("=+")]),t._v(", "),a("code",[t._v("=-")]),t._v(" or "),a("code",[t._v("=!")]),t._v(") where the reversed, single operator was meant ("),a("code",[t._v("+=")]),t._v(", "),a("code",[t._v("-=")]),t._v(" or "),a("code",[t._v("!=")]),t._v(") will compile and run, but not produce the expected results.")]),t._v(" "),a("p",[t._v("This rule raises an issue when "),a("code",[t._v("=+")]),t._v(", "),a("code",[t._v("=-")]),t._v(" and "),a("code",[t._v("=!")]),t._v(" are used without any space between the two operators and when there is at least one whitespace after.")]),t._v(" "),a("h2",{attrs:{id:"noncompliant-code-example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#noncompliant-code-example"}},[t._v("#")]),t._v(" Noncompliant Code Example")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" target "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ntarget "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Noncompliant; target = -3. Is that really what's meant?")]),t._v("\ntarget "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Noncompliant; target = 3")]),t._v("\n")])])]),a("h2",{attrs:{id:"compliant-solution"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compliant-solution"}},[t._v("#")]),t._v(" Compliant Solution")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" target "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ntarget "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Compliant; intent to assign inverse value of num is clear")]),t._v("\ntarget "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);