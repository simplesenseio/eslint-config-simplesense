(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{298:function(s,t,e){"use strict";e.r(t);var a=e(9),r=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[s._v("Disallows multiple consecutive spaces.")]),s._v(" "),e("p",[s._v("Multiple spaces in a row that are not used for indentation are typically mistakes. For example:")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("foo  "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])])]),e("p",[s._v("It's hard to tell, but there are two spaces between "),e("code",[s._v("foo")]),s._v(" and "),e("code",[s._v("===")]),s._v(". Multiple spaces such as this are generally frowned upon in favor of single spaces:")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("foo "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])])]),e("h2",{attrs:{id:"rule-details"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rule-details"}},[s._v("#")]),s._v(" Rule Details")]),s._v(" "),e("p",[s._v("This rule aims to disallow multiple whitespace around logical expressions, conditional expressions, declarations, array elements, object properties, sequences and function parameters.")]),s._v(" "),e("p",[s._v("Examples of "),e("strong",[s._v("incorrect")]),s._v(" code for this rule:")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('/*eslint no-multi-spaces: "error"*/')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("foo   "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\na "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v("  b\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" arr "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\na "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v("  b"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" c\n")])])]),e("p",[s._v("Examples of "),e("strong",[s._v("correct")]),s._v(" code for this rule:")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('/*eslint no-multi-spaces: "error"*/')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("foo "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\na "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" b\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" arr "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\na "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" b"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" c\n")])])]),e("h2",{attrs:{id:"options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[s._v("#")]),s._v(" Options")]),s._v(" "),e("p",[s._v("This rule's configuration consists of an object with the following properties:")]),s._v(" "),e("ul",[e("li",[e("code",[s._v('"ignoreEOLComments": true')]),s._v(" (defaults to "),e("code",[s._v("false")]),s._v(") ignores multiple spaces before comments that occur at the end of lines")]),s._v(" "),e("li",[e("code",[s._v('"exceptions": { "Property": true }')]),s._v(" ("),e("code",[s._v('"Property"')]),s._v(" is the only node specified by default) specifies nodes to ignore")])]),s._v(" "),e("h3",{attrs:{id:"ignoreeolcomments"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ignoreeolcomments"}},[s._v("#")]),s._v(" ignoreEOLComments")]),s._v(" "),e("p",[s._v("Examples of "),e("strong",[s._v("incorrect")]),s._v(" code for this rule with the "),e("code",[s._v('{ "ignoreEOLComments": false }')]),s._v(" (default) option:")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('/*eslint no-multi-spaces: ["error", { ignoreEOLComments: false }]*/')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" x "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("      "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// comment")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" x "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("      "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* multiline\n * comment\n */")]),s._v("\n")])])]),e("p",[s._v("Examples of "),e("strong",[s._v("correct")]),s._v(" code for this rule with the "),e("code",[s._v('{ "ignoreEOLComments": false }')]),s._v(" (default) option:")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('/*eslint no-multi-spaces: ["error", { ignoreEOLComments: false }]*/')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" x "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// comment")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" x "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* multiline\n * comment\n */")]),s._v("\n")])])]),e("p",[s._v("Examples of "),e("strong",[s._v("correct")]),s._v(" code for this rule with the "),e("code",[s._v('{ "ignoreEOLComments": true }')]),s._v(" option:")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('/*eslint no-multi-spaces: ["error", { ignoreEOLComments: true }]*/')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" x "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// comment")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" x "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("      "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// comment")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" x "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* multiline\n * comment\n */")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" x "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("      "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* multiline\n * comment\n */")]),s._v("\n")])])]),e("h3",{attrs:{id:"exceptions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#exceptions"}},[s._v("#")]),s._v(" exceptions")]),s._v(" "),e("p",[s._v("To avoid contradictions with other rules that require multiple spaces, this rule has an "),e("code",[s._v("exceptions")]),s._v(" option to ignore certain nodes.")]),s._v(" "),e("p",[s._v("This option is an object that expects property names to be AST node types as defined by "),e("a",{attrs:{href:"https://github.com/estree/estree",target:"_blank",rel:"noopener noreferrer"}},[s._v("ESTree"),e("OutboundLink")],1),s._v(". The easiest way to determine the node types for "),e("code",[s._v("exceptions")]),s._v(" is to use "),e("a",{attrs:{href:"https://astexplorer.net/",target:"_blank",rel:"noopener noreferrer"}},[s._v("AST Explorer"),e("OutboundLink")],1),s._v(" with the espree parser.")]),s._v(" "),e("p",[s._v("Only the "),e("code",[s._v("Property")]),s._v(" node type is ignored by default, because for the "),e("a",{attrs:{href:"key-spacing"}},[s._v("key-spacing")]),s._v(" rule some alignment options require multiple spaces in properties of object literals.")]),s._v(" "),e("p",[s._v("Examples of "),e("strong",[s._v("correct")]),s._v(" code for the default "),e("code",[s._v('"exceptions": { "Property": true }')]),s._v(" option:")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('/*eslint no-multi-spaces: "error"*/')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('/*eslint key-spacing: ["error", { align: "value" }]*/')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" obj "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("first")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"first"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("second")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"second"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),e("p",[s._v("Examples of "),e("strong",[s._v("incorrect")]),s._v(" code for the "),e("code",[s._v('"exceptions": { "Property": false }')]),s._v(" option:")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('/*eslint no-multi-spaces: ["error", { exceptions: { "Property": false } }]*/')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('/*eslint key-spacing: ["error", { align: "value" }]*/')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" obj "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("first")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"first"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("second")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"second"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),e("p",[s._v("Examples of "),e("strong",[s._v("correct")]),s._v(" code for the "),e("code",[s._v('"exceptions": { "BinaryExpression": true }')]),s._v(" option:")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('/*eslint no-multi-spaces: ["error", { exceptions: { "BinaryExpression": true } }]*/')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),e("p",[s._v("Examples of "),e("strong",[s._v("correct")]),s._v(" code for the "),e("code",[s._v('"exceptions": { "VariableDeclarator": true }')]),s._v(" option:")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('/*eslint no-multi-spaces: ["error", { exceptions: { "VariableDeclarator": true } }]*/')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" someVar      "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" someOtherVar "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'barBaz'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),e("p",[s._v("Examples of "),e("strong",[s._v("correct")]),s._v(" code for the "),e("code",[s._v('"exceptions": { "ImportDeclaration": true }')]),s._v(" option:")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('/*eslint no-multi-spaces: ["error", { exceptions: { "ImportDeclaration": true } }]*/')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" mod          "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'mod'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" someOtherMod "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'some-other-mod'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),e("h2",{attrs:{id:"when-not-to-use-it"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#when-not-to-use-it"}},[s._v("#")]),s._v(" When Not To Use It")]),s._v(" "),e("p",[s._v("If you don't want to check and disallow multiple spaces, then you should turn this rule off.")]),s._v(" "),e("h2",{attrs:{id:"related-rules"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#related-rules"}},[s._v("#")]),s._v(" Related Rules")]),s._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"key-spacing"}},[s._v("key-spacing")])]),s._v(" "),e("li",[e("a",{attrs:{href:"space-infix-ops"}},[s._v("space-infix-ops")])]),s._v(" "),e("li",[e("a",{attrs:{href:"space-in-brackets"}},[s._v("space-in-brackets")]),s._v(" (deprecated)")]),s._v(" "),e("li",[e("a",{attrs:{href:"space-in-parens"}},[s._v("space-in-parens")])]),s._v(" "),e("li",[e("a",{attrs:{href:"space-after-keywords"}},[s._v("space-after-keywords")])]),s._v(" "),e("li",[e("a",{attrs:{href:"space-unary-ops"}},[s._v("space-unary-ops")])]),s._v(" "),e("li",[e("a",{attrs:{href:"space-return-throw-case"}},[s._v("space-return-throw-case")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);