(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{229:function(e,t,s){"use strict";s.r(t);var n=s(9),a=Object(n.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[e._v("Requires or disallows newline at the end of files.")]),e._v(" "),s("p",[e._v("Trailing newlines in non-empty files are a common UNIX idiom. Benefits of\ntrailing newlines include the ability to concatenate or append to files as well\nas output files to the terminal without interfering with shell prompts.")]),e._v(" "),s("h2",{attrs:{id:"rule-details"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rule-details"}},[e._v("#")]),e._v(" Rule Details")]),e._v(" "),s("p",[e._v("This rule enforces at least one newline (or absence thereof) at the end\nof non-empty files.")]),e._v(" "),s("p",[e._v("Prior to v0.16.0 this rule also enforced that there was only a single line at\nthe end of the file. If you still want this behavior, consider enabling\n"),s("a",{attrs:{href:"no-multiple-empty-lines"}},[e._v("no-multiple-empty-lines")]),e._v(" with "),s("code",[e._v("maxEOF")]),e._v(" and/or\n"),s("a",{attrs:{href:"no-trailing-spaces"}},[e._v("no-trailing-spaces")]),e._v(".")]),e._v(" "),s("p",[e._v("Examples of "),s("strong",[e._v("incorrect")]),e._v(" code for this rule:")]),e._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v('/*eslint eol-last: ["error", "always"]*/')]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("function")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("doSomething")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" foo "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),s("p",[e._v("Examples of "),s("strong",[e._v("correct")]),e._v(" code for this rule:")]),e._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v('/*eslint eol-last: ["error", "always"]*/')]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("function")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("doSomething")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" foo "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\\n\n")])])]),s("h2",{attrs:{id:"options"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[e._v("#")]),e._v(" Options")]),e._v(" "),s("p",[e._v("This rule has a string option:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v('"always"')]),e._v(" (default) enforces that files end with a newline (LF)")]),e._v(" "),s("li",[s("code",[e._v('"never"')]),e._v(" enforces that files do not end with a newline")]),e._v(" "),s("li",[s("code",[e._v('"unix"')]),e._v(' (deprecated) is identical to "always"')]),e._v(" "),s("li",[s("code",[e._v('"windows"')]),e._v(' (deprecated) is identical to "always", but will use a CRLF character when autofixing')])]),e._v(" "),s("p",[s("strong",[e._v("Deprecated:")]),e._v(" The options "),s("code",[e._v('"unix"')]),e._v(" and "),s("code",[e._v('"windows"')]),e._v(" are deprecated. If you need to enforce a specific linebreak style, use this rule in conjunction with "),s("code",[e._v("linebreak-style")]),e._v(".")])])}),[],!1,null,null,null);t.default=a.exports}}]);