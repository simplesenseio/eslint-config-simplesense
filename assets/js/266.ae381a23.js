(window.webpackJsonp=window.webpackJsonp||[]).push([[266],{457:function(e,t,a){"use strict";a.r(t);var r=a(9),s=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"regexp-no-super-linear-backtracking"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#regexp-no-super-linear-backtracking"}},[e._v("#")]),e._v(" regexp/no-super-linear-backtracking")]),e._v(" "),a("blockquote",[a("p",[e._v("disallow exponential and polynomial backtracking")])]),e._v(" "),a("ul",[a("li",[e._v("‚öôÔ∏è This rule is included in "),a("code",[e._v('"plugin:regexp/recommended"')]),e._v(".")]),e._v(" "),a("li",[e._v("üîß The "),a("code",[e._v("--fix")]),e._v(" option on the "),a("a",{attrs:{href:"https://eslint.org/docs/user-guide/command-line-interface#fixing-problems",target:"_blank",rel:"noopener noreferrer"}},[e._v("command line"),a("OutboundLink")],1),e._v(" can automatically fix some of the problems reported by this rule.")])]),e._v(" "),a("h2",{attrs:{id:"rule-details"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rule-details"}},[e._v("#")]),e._v(" üìñ Rule Details")]),e._v(" "),a("p",[e._v("This rule reports cases of exponential and polynomial backtracking.")]),e._v(" "),a("p",[e._v("These types of backtracking almost always cause an exponential or polynomial worst-case runtime. This super-linear worst-case runtime can be exploited by attackers in what is called "),a("a",{attrs:{href:"https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS",target:"_blank",rel:"noopener noreferrer"}},[e._v("Regular expression Denial of Service - ReDoS"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("eslint-code-block",{attrs:{fix:""}},[a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v('/* eslint regexp/no-super-linear-backtracking: "error" */')]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("/* ‚úì GOOD */")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[e._v("a*b+a*$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[e._v("(?:a+)?")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("/* ‚úó BAD */")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[e._v("(?:a+)+$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[e._v("a*b?a*$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[e._v("(?:a|b|c+)*$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// not all cases can automatically be fixed")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[e._v("\\s*(.*?)(?=:)")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),e._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[e._v(".+?(?=\\s*=)")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[e._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])])]),e._v(" "),a("h3",{attrs:{id:"limitations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#limitations"}},[e._v("#")]),e._v(" Limitations")]),e._v(" "),a("p",[e._v("The rule only implements a very simplistic detection method and can only detect very simple cases of super-linear backtracking right now.")]),e._v(" "),a("p",[e._v("While the detection will improve in the future, this rule will never be able to perfectly detect all cases super-linear backtracking.")]),e._v(" "),a("h2",{attrs:{id:"options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[e._v("#")]),e._v(" üîß Options")]),e._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"regexp/no-super-linear-backtracking"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"error"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"report"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"certain"')]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),a("h3",{attrs:{id:"report"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#report"}},[e._v("#")]),e._v(" "),a("code",[e._v("report")])]),e._v(" "),a("p",[e._v("Every input string that exploits super-linear worst-case runtime can be separated into 3 parts:")]),e._v(" "),a("ol",[a("li",[e._v("A prefix to leads to exploitable part of the regex.")]),e._v(" "),a("li",[e._v("A non-empty string that will be repeated to exploit the ambiguity.")]),e._v(" "),a("li",[e._v("A rejecting suffix that forces the regex engine to backtrack.")])]),e._v(" "),a("p",[e._v("For some regexes it is not possible to find a rejecting suffix even though the regex contains exploitable ambiguity (e.g. "),a("code",[e._v("/(?:a+)+/")]),e._v("). These regexes are safe as long as they are used as is. However, regexes can also be used as building blocks to create more complex regexes. In this case, the ambiguity might cause super-linear backtracking in the composite regex.")]),e._v(" "),a("p",[e._v("This options control whether ambiguity that might cause super-linear backtracking will be reported.")]),e._v(" "),a("ul",[a("li",[a("p",[a("code",[e._v('report: "certain"')]),e._v("  ("),a("em",[e._v("default")]),e._v(")")]),e._v(" "),a("p",[e._v("Only certain cases of super-linear backtracking will be reported.")]),e._v(" "),a("p",[e._v("This means that ambiguity will only be reported if this rule can prove that there exists a rejecting suffix.")])]),e._v(" "),a("li",[a("p",[a("code",[e._v('report: "potential"')])]),e._v(" "),a("p",[e._v("All certain and potential cases of super-linear backtracking will be reported.")]),e._v(" "),a("p",[e._v("Potential cases are ones where a rejecting might be possible. Whether the reported potential cases are false positives or not has to be decided by the developer.")])])]),e._v(" "),a("h2",{attrs:{id:"further-reading"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#further-reading"}},[e._v("#")]),e._v(" üìö Further reading")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS",target:"_blank",rel:"noopener noreferrer"}},[e._v("Regular expression Denial of Service - ReDoS"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/RunDevelopment/scslre",target:"_blank",rel:"noopener noreferrer"}},[e._v("scslre"),a("OutboundLink")],1)])]),e._v(" "),a("h2",{attrs:{id:"version"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#version"}},[e._v("#")]),e._v(" üöÄ Version")]),e._v(" "),a("p",[e._v("This rule was introduced in eslint-plugin-regexp v0.13.0")]),e._v(" "),a("h2",{attrs:{id:"implementation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#implementation"}},[e._v("#")]),e._v(" üîç Implementation")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/ota-meshi/eslint-plugin-regexp/blob/master/lib/rules/no-super-linear-backtracking.ts",target:"_blank",rel:"noopener noreferrer"}},[e._v("Rule source"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/ota-meshi/eslint-plugin-regexp/blob/master/tests/lib/rules/no-super-linear-backtracking.ts",target:"_blank",rel:"noopener noreferrer"}},[e._v("Test source"),a("OutboundLink")],1)])])],1)}),[],!1,null,null,null);t.default=s.exports}}]);