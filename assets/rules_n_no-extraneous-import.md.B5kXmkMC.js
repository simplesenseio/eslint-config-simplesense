import{_ as a,c as s,a1 as o,o as t}from"./chunks/framework.C4wD7aVO.js";const u=JSON.parse('{"title":"Disallow import declarations which import extraneous modules (n/no-extraneous-import)","description":"","frontmatter":{},"headers":[],"relativePath":"rules/n/no-extraneous-import.md","filePath":"rules/n/no-extraneous-import.md"}'),i={name:"rules/n/no-extraneous-import.md"};function n(r,e,l,d,h,p){return t(),s("div",null,e[0]||(e[0]=[o(`<h1 id="disallow-import-declarations-which-import-extraneous-modules-n-no-extraneous-import" tabindex="-1">Disallow <code>import</code> declarations which import extraneous modules (<code>n/no-extraneous-import</code>) <a class="header-anchor" href="#disallow-import-declarations-which-import-extraneous-modules-n-no-extraneous-import" aria-label="Permalink to &quot;Disallow \`import\` declarations which import extraneous modules (\`n/no-extraneous-import\`)&quot;">â€‹</a></h1><p>ðŸ’¼ This rule is enabled in the following <a href="https://github.com/eslint-community/eslint-plugin-n#-configs" target="_blank" rel="noreferrer">configs</a>: ðŸŸ¢ <code>recommended-module</code>, âœ… <code>recommended-script</code>.</p><p>If an <code>import</code> declaration&#39;s source is extraneous (it&#39;s not listed in your <code>package.json</code>), the program may work locally but can break after dependencies are re-installed. This can cause issues for your team/contributors. If a declaration source is extraneous yet consistently works for you and your team, it might be a transitive dependency (a dependency of another dependency). Transitive dependencies should still be added as an explicit dependency in your <code>package.json</code> to avoid the risk of a dependency potentially changing or removing the transitive dependency.</p><p>Additionally, the transitive dependency could be a dev dependency, meaning your code could work in development but not in production.</p><p>This rule disallows <code>import</code> declarations of extraneous modules.</p><h2 id="ðŸ“–-rule-details" tabindex="-1">ðŸ“– Rule Details <a class="header-anchor" href="#ðŸ“–-rule-details" aria-label="Permalink to &quot;ðŸ“– Rule Details&quot;">â€‹</a></h2><p>This rule warns <code>import</code> declarations of extraneous modules.</p><h3 id="options" tabindex="-1">Options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;Options&quot;">â€‹</a></h3><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;rules&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;n/no-extraneous-import&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;error&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;allowModules&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;resolvePaths&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: []</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="allowmodules" tabindex="-1">allowModules <a class="header-anchor" href="#allowmodules" aria-label="Permalink to &quot;allowModules&quot;">â€‹</a></h4><p>This can be configured in the rule options or as a shared setting <a href="./../shared-settings#allowmodules"><code>settings.allowModules</code></a>. Please see the shared settings documentation for more information.</p><h4 id="resolvepaths" tabindex="-1">resolvePaths <a class="header-anchor" href="#resolvepaths" aria-label="Permalink to &quot;resolvePaths&quot;">â€‹</a></h4><p>This can be configured in the rule options or as a shared setting <a href="./../shared-settings#resolvepaths"><code>settings.resolvePaths</code></a>. Please see the shared settings documentation for more information.</p><h4 id="convertpath" tabindex="-1">convertPath <a class="header-anchor" href="#convertpath" aria-label="Permalink to &quot;convertPath&quot;">â€‹</a></h4><p>This can be configured in the rule options or as a shared setting <a href="./../shared-settings#convertpath"><code>settings.convertPath</code></a>. Please see the shared settings documentation for more information.</p><h2 id="ðŸ”Ž-implementation" tabindex="-1">ðŸ”Ž Implementation <a class="header-anchor" href="#ðŸ”Ž-implementation" aria-label="Permalink to &quot;ðŸ”Ž Implementation&quot;">â€‹</a></h2><ul><li><a href="../../lib/rules/no-extraneous-import.js">Rule source</a></li><li><a href="../../tests/lib/rules/no-extraneous-import.js">Test source</a></li></ul>`,17)]))}const m=a(i,[["render",n]]);export{u as __pageData,m as default};
