import{_ as a,c as i,a1 as s,o as t}from"./chunks/framework.DHJwed8E.js";const k=JSON.parse('{"title":"prefer-while","description":"","frontmatter":{},"headers":[],"relativePath":"rules/sonarjs/prefer-while.md","filePath":"rules/sonarjs/prefer-while.md"}'),n={name:"rules/sonarjs/prefer-while.md"};function o(l,e,r,p,h,d){return t(),i("div",null,e[0]||(e[0]=[s('<h1 id="prefer-while" tabindex="-1">prefer-while <a class="header-anchor" href="#prefer-while" aria-label="Permalink to &quot;prefer-while&quot;">â€‹</a></h1><p>ðŸ”§ <em>fixable</em></p><p>When only the condition expression is defined in a <code>for</code> loop, and the initialization and increment expressions are missing, a <code>while</code> loop should be used instead to increase readability.</p><h2 id="noncompliant-code-example" tabindex="-1">Noncompliant Code Example <a class="header-anchor" href="#noncompliant-code-example" aria-label="Permalink to &quot;Noncompliant Code Example&quot;">â€‹</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (;condition;) { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*...*/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre></div><h2 id="compliant-solution" tabindex="-1">Compliant Solution <a class="header-anchor" href="#compliant-solution" aria-label="Permalink to &quot;Compliant Solution&quot;">â€‹</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (condition) { </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*...*/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre></div>',7)]))}const m=a(n,[["render",o]]);export{k as __pageData,m as default};
