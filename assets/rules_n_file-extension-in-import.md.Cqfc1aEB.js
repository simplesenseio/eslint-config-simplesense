import{_ as i,c as a,a1 as t,o as e}from"./chunks/framework.DHJwed8E.js";const c=JSON.parse('{"title":"Enforce the style of file extensions in import declarations (n/file-extension-in-import)","description":"","frontmatter":{},"headers":[],"relativePath":"rules/n/file-extension-in-import.md","filePath":"rules/n/file-extension-in-import.md"}'),n={name:"rules/n/file-extension-in-import.md"};function o(l,s,p,h,r,d){return e(),a("div",null,s[0]||(s[0]=[t(`<h1 id="enforce-the-style-of-file-extensions-in-import-declarations-n-file-extension-in-import" tabindex="-1">Enforce the style of file extensions in <code>import</code> declarations (<code>n/file-extension-in-import</code>) <a class="header-anchor" href="#enforce-the-style-of-file-extensions-in-import-declarations-n-file-extension-in-import" aria-label="Permalink to &quot;Enforce the style of file extensions in \`import\` declarations (\`n/file-extension-in-import\`)&quot;">‚Äã</a></h1><p>üîß This rule is automatically fixable by the <a href="https://eslint.org/docs/latest/user-guide/command-line-interface#--fix" target="_blank" rel="noreferrer"><code>--fix</code> CLI option</a>.</p><p>We can omit file extensions in <code>import</code>/<code>export</code> declarations.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> foo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;./path/to/a/file&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // maybe it&#39;s resolved to &#39;file.js&#39; or &#39;file.json&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;./path/to/a/file&quot;</span></span></code></pre></div><p>We can also import a variety of file types with bundlers such as Webpack. In this situation, explicit file extensions can help to identify the type of file being imported.</p><h2 id="üìñ-rule-details" tabindex="-1">üìñ Rule Details <a class="header-anchor" href="#üìñ-rule-details" aria-label="Permalink to &quot;üìñ Rule Details&quot;">‚Äã</a></h2><p>This rule enforces the style of file extensions in <code>import</code>/<code>export</code> declarations.</p><h3 id="options" tabindex="-1">Options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;Options&quot;">‚Äã</a></h3><p>This rule has a string option and an object option.</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;n/file-extension-in-import&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;error&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;always&quot;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> or</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;never&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;.xxx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;always&quot;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> or</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;never&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li><code>&quot;always&quot;</code> (default) requires file extensions in <code>import</code>/<code>export</code> declarations.</li><li><code>&quot;never&quot;</code> disallows file extensions in <code>import</code>/<code>export</code> declarations.</li><li><code>.xxx</code> is the overriding setting for specific file extensions. You can use arbitrary property names which start with <code>.</code>.</li></ul><h4 id="always" tabindex="-1">always <a class="header-anchor" href="#always" aria-label="Permalink to &quot;always&quot;">‚Äã</a></h4><p>Examples of üëé <strong>incorrect</strong> code for the <code>&quot;always&quot;</code> option:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*eslint n/file-extension-in-import: [&quot;error&quot;, &quot;always&quot;]*/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> foo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;./path/to/a/file&quot;</span></span></code></pre></div><p>Examples of üëç <strong>correct</strong> code for the <code>&quot;always&quot;</code> option:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*eslint n/file-extension-in-import: [&quot;error&quot;, &quot;always&quot;]*/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> eslint </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;eslint&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> foo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;./path/to/a/file.js&quot;</span></span></code></pre></div><h4 id="never" tabindex="-1">never <a class="header-anchor" href="#never" aria-label="Permalink to &quot;never&quot;">‚Äã</a></h4><p>Examples of üëé <strong>incorrect</strong> code for the <code>&quot;never&quot;</code> option:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*eslint n/file-extension-in-import: [&quot;error&quot;, &quot;never&quot;]*/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> foo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;./path/to/a/file.js&quot;</span></span></code></pre></div><p>Examples of üëç <strong>correct</strong> code for the <code>&quot;never&quot;</code> option:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*eslint n/file-extension-in-import: [&quot;error&quot;, &quot;never&quot;]*/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> eslint </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;eslint&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> foo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;./path/to/a/file&quot;</span></span></code></pre></div><h4 id="xxx" tabindex="-1">.xxx <a class="header-anchor" href="#xxx" aria-label="Permalink to &quot;.xxx&quot;">‚Äã</a></h4><p>Examples of üëç <strong>correct</strong> code for the <code>[&quot;always&quot;, { &quot;.js&quot;: &quot;never&quot; }]</code> option:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*eslint n/file-extension-in-import: [&quot;error&quot;, &quot;always&quot;, { &quot;.js&quot;: &quot;never&quot; }]*/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> eslint </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;eslint&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> script </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;./script&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> styles </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;./styles.css&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> logo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;./logo.png&quot;</span></span></code></pre></div><h3 id="shared-settings" tabindex="-1">Shared Settings <a class="header-anchor" href="#shared-settings" aria-label="Permalink to &quot;Shared Settings&quot;">‚Äã</a></h3><h4 id="tsconfigpath" tabindex="-1">tsconfigPath <a class="header-anchor" href="#tsconfigpath" aria-label="Permalink to &quot;tsconfigPath&quot;">‚Äã</a></h4><p>This can be configured in the shared settings <a href="./../shared-settings#tsconfigpath"><code>settings.tsconfigPath</code></a>. Please see the shared settings documentation for more information.</p><h4 id="typescriptextensionmap" tabindex="-1">typescriptExtensionMap <a class="header-anchor" href="#typescriptextensionmap" aria-label="Permalink to &quot;typescriptExtensionMap&quot;">‚Äã</a></h4><p>This can be configured in the shared settings <a href="./../shared-settings#typescriptextensionmap"><code>settings.typescriptExtensionMap</code></a>. Please see the shared settings documentation for more information.</p><h2 id="üîé-implementation" tabindex="-1">üîé Implementation <a class="header-anchor" href="#üîé-implementation" aria-label="Permalink to &quot;üîé Implementation&quot;">‚Äã</a></h2><ul><li><a href="../../lib/rules/file-extension-in-import.js">Rule source</a></li><li><a href="../../tests/lib/rules/file-extension-in-import.js">Test source</a></li></ul>`,31)]))}const u=i(n,[["render",o]]);export{c as __pageData,u as default};
