import{_ as n,D as a,c as o,I as t,w as l,a3 as c,l as e,a as s,o as d}from"./chunks/framework.ClQ4Qie4.js";const A=JSON.parse('{"title":"@eslint-community/eslint-comments/no-unlimited-disable","description":"","frontmatter":{},"headers":[],"relativePath":"rules/@eslint-community/eslint-comments/no-unlimited-disable.md","filePath":"rules/@eslint-community/eslint-comments/no-unlimited-disable.md"}'),r={name:"rules/@eslint-community/eslint-comments/no-unlimited-disable.md"},m=c('<h1 id="eslint-community-eslint-comments-no-unlimited-disable" tabindex="-1">@eslint-community/eslint-comments/no-unlimited-disable <a class="header-anchor" href="#eslint-community-eslint-comments-no-unlimited-disable" aria-label="Permalink to &quot;@eslint-community/eslint-comments/no-unlimited-disable&quot;">​</a></h1><blockquote><p>disallow <code>eslint-disable</code> comments without rule names</p></blockquote><ul><li>🌟 The <code>&quot;extends&quot;: &quot;plugin:@eslint-community/eslint-comments/recommended&quot;</code> property in a configuration file enables this rule.</li></ul><p><code>eslint-disable</code> directive-comments disable all rules by default. This may cause to overlook some ESLint warnings unintentionally. So you should specify the rules to disable accurately.</p><h2 id="rule-details" tabindex="-1">Rule Details <a class="header-anchor" href="#rule-details" aria-label="Permalink to &quot;Rule Details&quot;">​</a></h2><p>Examples of 👎 <strong>incorrect</strong> code for this rule:</p>',6),u=e("div",{class:"language-js vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"js"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"/*eslint @eslint-community/eslint-comments/no-unlimited-disable: error */")]),s(`
`),e("span",{class:"line"}),s(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"var"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," foo; "),e("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//eslint-disable-line")])])])],-1),h=e("p",null,[s("Examples of 👍 "),e("strong",null,"correct"),s(" code for this rule:")],-1),p=e("div",{class:"language-js vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"},"js"),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[e("code",null,[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"/*eslint @eslint-community/eslint-comments/no-unlimited-disable: error */")]),s(`
`),e("span",{class:"line"}),s(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"var"),e("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," foo; "),e("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//eslint-disable-line no-unused-vars")])])])],-1);function k(_,y,b,g,f,v){const i=a("eslint-playground");return d(),o("div",null,[m,t(i,{type:"bad"},{default:l(()=>[u]),_:1}),h,t(i,{type:"good"},{default:l(()=>[p]),_:1})])}const E=n(r,[["render",k]]);export{A as __pageData,E as default};
