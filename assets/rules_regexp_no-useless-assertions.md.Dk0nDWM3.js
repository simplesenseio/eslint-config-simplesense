import{_ as t,D as l,c as n,I as r,w as h,a3 as e,o,j as s,a as i}from"./chunks/framework.vIlBslkg.js";const _=JSON.parse('{"title":"regexp/no-useless-assertions","description":"disallow assertions that are known to always accept (or reject)","frontmatter":{"pageClass":"rule-details","sidebarDepth":0,"title":"regexp/no-useless-assertions","description":"disallow assertions that are known to always accept (or reject)","since":"v0.9.0"},"headers":[],"relativePath":"rules/regexp/no-useless-assertions.md","filePath":"rules/regexp/no-useless-assertions.md"}'),k={name:"rules/regexp/no-useless-assertions.md"},p=e('<h1 id="regexp-no-useless-assertions" tabindex="-1">regexp/no-useless-assertions <a class="header-anchor" href="#regexp-no-useless-assertions" aria-label="Permalink to &quot;regexp/no-useless-assertions&quot;">‚Äã</a></h1><p>üíº This rule is enabled in the following configs: üü¢ <code>flat/recommended</code>, üîµ <code>recommended</code>.</p><p>üí° This rule is manually fixable by <a href="https://eslint.org/docs/latest/use/core-concepts#rule-suggestions" target="_blank" rel="noreferrer">editor suggestions</a>.</p><blockquote><p>disallow assertions that are known to always accept (or reject)</p></blockquote><h2 id="rule-details" tabindex="-1">üìñ Rule Details <a class="header-anchor" href="#rule-details" aria-label="Permalink to &quot;:book: Rule Details&quot;">‚Äã</a></h2><p>Some assertions are unnecessary because the rest of the pattern forces them to always be accept (or reject).</p>',6),d=s("div",{class:"language-js vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"js"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},'/* eslint regexp/no-useless-assertions: "error" */')]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"/* ‚úì GOOD */")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"var"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," foo "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," /"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"\\b"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#DBEDFF"}},"foo"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"\\b"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"/"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"/* ‚úó BAD */")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"var"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," foo "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," /"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#DBEDFF"}},"#"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"\\b"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#DBEDFF"}},"foo"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"/"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";    "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// \\b will always accept")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"var"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," foo "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," /"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#DBEDFF"}},"foo"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"\\b"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#DBEDFF"}},"bar"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"/"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";  "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// \\b will always reject")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"var"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," foo "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," /"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"$"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#DBEDFF"}},"foo"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"/"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";      "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// $ will always reject")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"var"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," foo "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," /"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#DBEDFF"}},"(?="),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"\\w"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#DBEDFF"}},")"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"\\d"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"+"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"/"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"; "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// (?=\\w) will always accept")])])])],-1),c=e('<h3 id="limitations" tabindex="-1">Limitations <a class="header-anchor" href="#limitations" aria-label="Permalink to &quot;Limitations&quot;">‚Äã</a></h3><p>Right now, this rule is implemented by only looking a single character ahead and behind. This is enough to determine whether the builtin assertions (<code>\\b</code>, <code>\\B</code>, <code>^</code>, <code>$</code>) trivially reject or accept but it is not enough for all lookarounds. The algorithm determining the characters ahead and behind is very conservative which can lead to false negatives.</p><h2 id="options" tabindex="-1">üîß Options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;:wrench: Options&quot;">‚Äã</a></h2><p>Nothing.</p><h2 id="compatibility" tabindex="-1">‚ù§Ô∏è Compatibility <a class="header-anchor" href="#compatibility" aria-label="Permalink to &quot;:heart: Compatibility&quot;">‚Äã</a></h2><p>This rule was taken from <a href="https://github.com/RunDevelopment/eslint-plugin-clean-regex" target="_blank" rel="noreferrer">eslint-plugin-clean-regex</a>.<br> This rule is compatible with <a href="https://github.com/RunDevelopment/eslint-plugin-clean-regex/blob/master/docs/rules/no-unnecessary-assertions.md" target="_blank" rel="noreferrer">clean-regex/no-unnecessary-assertions</a> rule.</p><h2 id="version" tabindex="-1">üöÄ Version <a class="header-anchor" href="#version" aria-label="Permalink to &quot;:rocket: Version&quot;">‚Äã</a></h2><p>This rule was introduced in eslint-plugin-regexp v0.9.0</p><h2 id="implementation" tabindex="-1">üîç Implementation <a class="header-anchor" href="#implementation" aria-label="Permalink to &quot;:mag: Implementation&quot;">‚Äã</a></h2><ul><li><a href="https://github.com/ota-meshi/eslint-plugin-regexp/blob/master/lib/rules/no-useless-assertions.ts" target="_blank" rel="noreferrer">Rule source</a></li><li><a href="https://github.com/ota-meshi/eslint-plugin-regexp/blob/master/tests/lib/rules/no-useless-assertions.ts" target="_blank" rel="noreferrer">Test source</a></li></ul>',10);function g(u,y,F,b,m,E){const a=l("eslint-code-block");return o(),n("div",null,[p,r(a,null,{default:h(()=>[d]),_:1}),c])}const f=t(k,[["render",g]]);export{_ as __pageData,f as default};
