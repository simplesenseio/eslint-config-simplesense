import{_ as s,c as i,o as e,a2 as a}from"./chunks/framework.DKvG-fKI.js";const g=JSON.parse('{"title":"Disallow require() expressions which import non-existence modules (n/no-missing-require)","description":"","frontmatter":{},"headers":[],"relativePath":"rules/n/no-missing-require.md","filePath":"rules/n/no-missing-require.md"}'),t={name:"rules/n/no-missing-require.md"},n=a(`<h1 id="disallow-require-expressions-which-import-non-existence-modules-n-no-missing-require" tabindex="-1">Disallow <code>require()</code> expressions which import non-existence modules (<code>n/no-missing-require</code>) <a class="header-anchor" href="#disallow-require-expressions-which-import-non-existence-modules-n-no-missing-require" aria-label="Permalink to &quot;Disallow \`require()\` expressions which import non-existence modules (\`n/no-missing-require\`)&quot;">‚Äã</a></h1><p>üíº This rule is enabled in the following <a href="https://github.com/eslint-community/eslint-plugin-n#-configs" target="_blank" rel="noreferrer">configs</a>: ‚òëÔ∏è <code>flat/recommended</code>, üü¢ <code>flat/recommended-module</code>, ‚úÖ <code>flat/recommended-script</code>, ‚òëÔ∏è <code>recommended</code>, üü¢ <code>recommended-module</code>, ‚úÖ <code>recommended-script</code>.</p><p>Maybe we cannot find typo of import paths until run it, so this rule checks import paths.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// If the file &quot;foo&quot; doesn&#39;t exist, this is a runtime error.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> foo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./foo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="üìñ-rule-details" tabindex="-1">üìñ Rule Details <a class="header-anchor" href="#üìñ-rule-details" aria-label="Permalink to &quot;üìñ Rule Details&quot;">‚Äã</a></h2><p>This rule checks the file paths of <code>require()</code>s, then reports the path of files which don&#39;t exist.</p><p>Examples of üëé <strong>incorrect</strong> code for this rule:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*eslint n/no-missing-require: &quot;error&quot; */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> typoFile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./typo-file&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*error &quot;./typo-file&quot; is not found.*/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> typoModule </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;typo-module&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*error &quot;typo-module&quot; is not found.*/</span></span></code></pre></div><p>Examples of üëç <strong>correct</strong> code for this rule:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*eslint n/no-missing-require: &quot;error&quot; */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> existingFile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./existing-file&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> existingModule </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;existing-module&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// This rule cannot check for dynamic imports.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> foo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FOO_NAME</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="options" tabindex="-1">Options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;Options&quot;">‚Äã</a></h3><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;rules&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;n/no-missing-require&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;error&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;allowModules&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;resolvePaths&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/path/to/a/modules/directory&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;tryExtensions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.node&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="allowmodules" tabindex="-1">allowModules <a class="header-anchor" href="#allowmodules" aria-label="Permalink to &quot;allowModules&quot;">‚Äã</a></h4><p>This can be configured in the rule options or as a shared setting <a href="./../shared-settings#allowmodules"><code>settings.allowModules</code></a>. Please see the shared settings documentation for more information.</p><h4 id="resolvepaths" tabindex="-1">resolvePaths <a class="header-anchor" href="#resolvepaths" aria-label="Permalink to &quot;resolvePaths&quot;">‚Äã</a></h4><p>This can be configured in the rule options or as a shared setting <a href="./../shared-settings#resolvepaths"><code>settings.resolvePaths</code></a>. Please see the shared settings documentation for more information.</p><h4 id="tryextensions" tabindex="-1">tryExtensions <a class="header-anchor" href="#tryextensions" aria-label="Permalink to &quot;tryExtensions&quot;">‚Äã</a></h4><p>This can be configured in the rule options or as a shared setting <a href="./../shared-settings#tryextensions"><code>settings.tryExtensions</code></a>. Please see the shared settings documentation for more information.</p><h4 id="tsconfigpath" tabindex="-1">tsconfigPath <a class="header-anchor" href="#tsconfigpath" aria-label="Permalink to &quot;tsconfigPath&quot;">‚Äã</a></h4><p>This can be configured in the rule options or as a shared setting <a href="./../shared-settings#tsconfigpath"><code>settings.tsconfigPath</code></a>. Please see the shared settings documentation for more information.</p><h4 id="typescriptextensionmap" tabindex="-1">typescriptExtensionMap <a class="header-anchor" href="#typescriptextensionmap" aria-label="Permalink to &quot;typescriptExtensionMap&quot;">‚Äã</a></h4><p>This can be configured in the rule options or as a shared setting <a href="./../shared-settings#typescriptextensionmap"><code>settings.typescriptExtensionMap</code></a>. Please see the shared settings documentation for more information.</p><h2 id="üîé-implementation" tabindex="-1">üîé Implementation <a class="header-anchor" href="#üîé-implementation" aria-label="Permalink to &quot;üîé Implementation&quot;">‚Äã</a></h2><ul><li><a href="../../lib/rules/no-missing-require.js">Rule source</a></li><li><a href="../../tests/lib/rules/no-missing-require.js">Test source</a></li></ul>`,24),l=[n];function h(o,r,p,d,k,c){return e(),i("div",null,l)}const E=s(t,[["render",h]]);export{g as __pageData,E as default};
